<?php

namespace Tests\Feature;

use Illuminate\Database\QueryException;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Foundation\Testing\WithFaker;
use Illuminate\Support\Facades\DB;
use PHPUnit\Runner\ErrorException;
use Tests\TestCase;

class TransactionTest extends TestCase
{
    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        DB::delete('DELETE FROM categories');
    }

    public function testTransactionSuccess()
    {
        DB::transaction(function (){
            DB::insert('INSERT INTO categories(id, name, description, created_at) values (?, ?, ?, ?)',[
                "GADGET","Gadget","Gadget Category","2023-01-01 10:10:10"
            ]);

            DB::insert('INSERT INTO categories(id, name, description, created_at) values (?, ?, ?, ?)',[
                "FOOD","Food","Food Category","2023-01-01 10:10:10"
            ]);

            $results = DB::select("SELECT * FROM categories");
            self::assertCount(2, $results);
        });
    }

    public function testTransactionFailed()
    {
        try {
            DB::transaction(function (){
                DB::insert('INSERT INTO categories(id, name, description, created_at) values (?, ?, ?, ?)',[
                    "GADGET","Gadget","Gadget Category","2023-01-01 10:10:10"
                ]);

                DB::insert('INSERT INTO categories(id, name, description, created_at) values (?, ?, ?, ?)',[
                    "GADGET","Food","Food Category","2023-01-01 10:10:10"
                ]);
            });
        }catch (QueryException $error){
            // Expected
        }

        $results = DB::select("SELECT * FROM categories");
        self::assertCount(0, $results);
    }

    public function testManualTransactionSuccess()
    {
        try {
            DB::beginTransaction();
            DB::insert('INSERT INTO categories(id, name, description, created_at) values (?, ?, ?, ?)',[
                "GADGET","Gadget","Gadget Category","2023-01-01 10:10:10"
            ]);
            DB::insert('INSERT INTO categories(id, name, description, created_at) values (?, ?, ?, ?)',[
                "FOOD","Food","Food Category","2023-01-01 10:10:10"
            ]);
            DB::commit();
        }catch (QueryException $error){
            DB::rollBack();
        }

        $results = DB::select("SELECT * FROM categories");
        self::assertCount(2, $results);
    }

    public function testManualTransactionFailed()
    {
        try {
            DB::beginTransaction();
            DB::insert('INSERT INTO categories(id, name, description, created_at) values (?, ?, ?, ?)',[
                "GADGET","Gadget","Gadget Category","2023-01-01 10:10:10"
            ]);
            DB::insert('INSERT INTO categories(id, name, description, created_at) values (?, ?, ?, ?)',[
                "GADGET","Food","Food Category","2023-01-01 10:10:10"
            ]);
            DB::commit();
        }catch (QueryException $error){
            DB::rollBack();
        }

        $results = DB::select("SELECT * FROM categories");
        self::assertCount(0, $results);
    }
}
